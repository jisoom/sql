--데이터 확인하기 위해 미리 만들어주는 창

--회원(1)
INSERT INTO AB_MEMBER
VALUES('ZISOO', 'JAVA', '강지수',TO_DATE ('1998-11-04', 'YYYY-MM-DD'),'대전 대덕구 오정동','01083923445')
--회원(2)
INSERT INTO AB_MEMBER
VALUES('YUJIN', 'JAVA2', '강유진',TO_DATE ('1998-12-20', 'YYYY-MM-DD'),'대전 서구 도마동','01028718442')


--리뷰(1)
INSERT INTO AB_REVIEW
VALUES('ZISOO', 0, '안녕하세요', TO_DATE('2021-04-19', 'YYYY-MM-DD'))


--관리자(1)
insert into ab_admin
values('ADMIN', 'ADMIN', '관리자')


--상품(1)
INSERT INTO AB_PROD
VALUES(1,'봄가디건',100,21800, '아우터', SYSDATE, 'S', 'PINK')
--상품(2)
INSERT INTO AB_PROD
VALUES(2, '레이스블라우스',50,19800, '상의', SYSDATE, 'M', 'WHITE')
--상품(3)
INSERT INTO AB_PROD
VALUES(3, '롱스커트',3,19800, '하의', SYSDATE, 'XL', 'BLACK')




--결제수단(1)
INSERT INTO AB_PAY
VALUES('a001', '현금')
--결제수단(2)
INSERT INTO AB_PAY
VALUES('a002', '하나카드')


SELECT b.prod_name, b.prod_field
FROM(SELECT *
     FROM AB_ORDER_PROD 
     ORDER BY ORDER_QTY DESC) a, ab_prod b
where a.prod_no = b.prod_no

SELECT PROD_NO, PROD_NAME, PROD_PRICE FROM AB_PROD WHERE PROD_FIELD = '아우터' ORDER BY PROD_PRICE DESC
SELECT PROD_NO, PROD_NAME, PROD_PRICE, PROD_REG_DATE FROM AB_PROD WHERE PROD_FIELD = '아우터' ORDER BY PROD_REG_DATE DESC

INSERT INTO AB_MEMBER(MEM_ID, MEM_PW, MEM_NAME, MEM_BIRTH)
				VALUES(TO_DATE('19981104','YYYY-MM-DD');
                
                SELECT A.PROD_NO, A.CART_QTY,B.PROD_PRICE, SUM(A.CART_QTY * B.PROD_PRICE) AS AMT
FROM AB_CART A, AB_PROD B
WHERE A.PROD_NO = B.PROD_NO
 AND A.MEM_ID = 'ZISOO'
GROUP BY A.PROD_NO, A.CART_QTY,B.PROD_PRICE

select sum(S.amt) as sum
from(SELECT A.PROD_NO , A.CART_QTY,B.PROD_PRICE, SUM(A.CART_QTY * B.PROD_PRICE) AS AMT
       FROM AB_CART A, AB_PROD B
      WHERE A.PROD_NO = B.PROD_NO
        AND A.MEM_ID = 'ZISOO'
      GROUP BY A.PROD_NO, A.CART_QTY,B.PROD_PRICE) S
group by rollup(S.prod_no)

select job, sum(sal)
from emp
group by rollup(job)

SELECT COUNT(MEM_ID) AS CNT FROM AB_MEMBER WHERE MEM_ID = 'ZISOO'


CREATE OR REPLACE VIEW V_CART01
AS
SELECT NVL(TO_CHAR(C.PROD_NO),'합계') AS  PROD_NO, C.AMT, C.QAMT
  FROM  (SELECT A.PROD_NO AS PROD_NO , SUM(A.CART_QTY * B.PROD_PRICE) AS AMT,
                SUM(A.CART_QTY) AS QAMT
           FROM AB_CART A, AB_PROD B
          WHERE A.PROD_NO = B.PROD_NO
            AND A.MEM_ID = 'ZISOO'
           GROUP BY ROLLUP(A.PROD_NO)) C;
           
SELECT A.ORDER_NO, A.PROD_NO, A.ORDER_QTY, B.ORDER_DATE, B.MEM_ID, B.ORDER_PAY, B.PAY_CODE, B.ORDER_SD
FROM AB_ORDER_PROD A, AB_ORDER B
WHERE B.MEM_ID = 'ZISOO'
AND A.ORDER_NO = B.ORDER_NO

SELECT A.QNA_NO, A.MEM_ID, A.ADMIN_ID, A.QNA_TITLE, A.QNA_CONTENT, B.MEM_NAME, 
TO_CHAR(A.QNA_REG_DATE, 'YYYY-MM-DD') AS QNA_REG_DATE, TO_CHAR(A.QNA_RE_REG_DATE, 'YYYY-MM-DD') AS QNA_RE_REG_DATE, QNA_RECONTENT 
FROM AB_QNA A, AB_MEMBER B 
WHERE A.MEM_ID = B.MEM_ID 
AND A.MEM_ID = 'ZISOO'           

SELECT * FROM V_CART01;

SELECT C.PROD_NO, C.QAMT, NVL(TO_CHAR(A.PROD_PRICE),' '),C.AMT
  FROM V_CART01 C, AB_PROD A
 WHERE C.PROD_NO = A.PROD_NO(+); 
 
INSERT INTO AB_ORDER_PROD
SELECT *
FROM AB_;

SELECT MAX(ORDER_NO)
FROM AB_ORDER
WHERE MEM_ID = 'ZISOO'

INSERT INTO AB_ORDER_PROD VALUES((SELECT MAX(ORDER_NO) FROM AB_ORDER_PROD WHERE MEM_ID ='ZISOO'), (SELECT CART_ATY), ?

INSERT INTO AB_ORDER_PROD
SELECT MAX(A.ORDER_NO) AS ORDER_NO , B.PROD_NO AS PROD_NO, B.CART_QTY AS CART_QTY
FROM AB_ORDER A, AB_CART B
WHERE A.MEM_ID = 'ZISOO'
GROUP BY B.PROD_NO, B.CART_QTY

SELECT PROD_STOCK_QTY FROM AB_PROD WHERE PROD_NO = 5


                    
                    
                    
--재고수량 자동으로 업데이트                                    
CREATE OR REPLACE TRIGGER TG_AB_PROD_UPDATE
    AFTER INSERT ON AB_ORDER_PROD
    FOR EACH ROW
BEGIN
    UPDATE AB_PROD
    SET PROD_STOCK_QTY = PROD_STOCK_QTY - :NEW.ORDER_QTY
    WHERE PROD_NO = :NEW.PROD_NO;
END;

SELECT A.PROD_NO, SUM(A.PROD_PRICE * B.ORDER_QTY) AS AMT
FROM AB_PROD A, AB_ORDER_PROD B, AB_ORDER C
WHERE MEM_ID = 'ZISOO'
AND A.PROD_NO = B.PROD_NO
AND C.ORDER_NO = B.ORDER_NO
GROUP BY A.PROD_NO                    
 
SELECT A.ORDER_NO, A.PROD_NO, A.ORDER_QTY, TO_CHAR(B.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE , B.MEM_ID, B.ORDER_PAY, B.PAY_CODE, B.ORDER_SD
				FROM AB_ORDER_PROD A, AB_ORDER B 
				WHERE B.MEM_ID = 'ZISOO'
				AND A.ORDER_NO = B.ORDER_NO
                
SELECT A.PROD_NO, B.PROD_NAME, B.PROD_FIELD
FROM(SELECT PROD_NO, ORDER_QTY
     FROM AB_ORDER_PROD 
     GROUP BY PROD_NO, ORDER_QTY
     ORDER BY ORDER_QTY DESC) A, AB_PROD B 
WHERE A.PROD_NO = B.PROD_NO 
GROUP BY A.PROD_NO, B.PROD_NAME, B.PROD_FIELD

SELECT B.PROD_NO,B.PROD_NAME, B.PROD_FIELD 
FROM(SELECT * 
       FROM AB_ORDER_PROD 
       ORDER BY ORDER_QTY DESC) A, AB_PROD B 
WHERE A.PROD_NO = B.PROD_NO;

SELECT A.PROD_NO, PROD_FIELD, B.PROD_NAME
FROM (SELECT PROD_NO, SUM(ORDER_QTY) AS ORDER_QTY
        FROM AB_ORDER_PROD
        GROUP BY PROD_NO) A
LEFT OUTER JOIN AB_PROD B ON A.PROD_NO = B.PROD_NO
ORDER BY A.ORDER_QTY DESC
;


                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                