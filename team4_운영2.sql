--SELECT A.LEC_OPEN_ID, A.LEC_ST_DATE, A.LEC_END_DATE, A.LEC_ID, A.LEC_PRICE, A.REGI_ST_DATE, A.REGI_END_DATE, A.LEC_STAT_CODE
--        , A.REGI_STAT_CODE, A.TEACHER_ID, A.LEC_CONTENT, B.CODE_NAME || '호' LEC_ROOM_CODE, A.LEC_NAME, C.MEM_NAME TEACHER_NAME
--FROM LEC_OPEN A LEFT JOIN CODE_TB B ON , MEMBER C
--WHERE 1=1
--AND A.TEACHER_ID = C.MEM_ID
--ORDER BY A.LEC_ST_DATE DESC

SELECT A.LEC_OPEN_ID, A.COLOR, A.STU_ID, TO_DATE(B.LEC_ST_DATE,'YYYY-MM-DD') LEC_ST_DATE, TO_CHAR(B.LEC_END_DATE,'YYYY-MM-DD') LEC_END_DATE, B.LEC_ID, B.LEC_PRICE
		        , TO_CHAR(B.REGI_ST_DATE,'YYYY-MM-DD') REGI_ST_DATE, TO_CHAR(B.REGI_END_DATE,'YYYY-MM-DD') REGI_END_DATE
		        , B.LEC_STAT_CODE, B.REGI_STAT_CODE, B.TEACHER_ID, B.LEC_CONTENT, B.LEC_ROOM_CODE, B.LEC_NAME, C.MEM_NAME TEACHER_NAME, D.CODE_NAME || '호' LEC_ROOM_NAME
		FROM STU_LEC A LEFT JOIN LEC_OPEN B ON(A.LEC_OPEN_ID = B.LEC_OPEN_ID) 
		                LEFT JOIN MEMBER C ON(B.TEACHER_ID = C.MEM_ID)
		                LEFT JOIN CODE_TB D ON(B.LEC_ROOM_CODE = D.CODE_ID)
WHERE STU_ID = 'stu01'

--강의명, 강의 시작일 ,강의 종료일, 진행 상태
--, 과목, 학년
--, 요일, 교시
;
/

--방법 1
WITH T AS(
SELECT A.LEC_NAME, TO_DATE(A.LEC_ST_DATE,'YYYY-MM-DD') LEC_ST_DATE, TO_CHAR(A.LEC_END_DATE,'YYYY-MM-DD') LEC_END_DATE
        , B.GRADE, C.CODE_NAME SUB_NAME, D.LEC_DAY, D.ST_PER, D.END_PER, E.CODE_NAME LEC_ST_NAME
FROM LEC_OPEN A LEFT JOIN LEC B ON(A.LEC_ID = B.LEC_ID)
                LEFT JOIN CODE_TB C ON(B.SUB_CODE = C.CODE_ID)
                LEFT JOIN LEC_TABLE D ON(A.LEC_OPEN_ID = D.LEC_OPEN_ID)
                LEFT JOIN CODE_TB E ON(A.LEC_STAT_CODE = E.CODE_ID)
WHERE A.LEC_OPEN_ID = 1
)${lectureVo.lecStName}
SELECT DISTINCT LEC_NAME, LEC_ST_DATE, LEC_END_DATE, GRADE, SUB_NAME, ST_PER, END_PER, LEC_ST_NAME
     , LISTAGG(LEC_DAY,',') WITHIN GROUP (ORDER BY LEC_DAY) OVER(PARTITION BY LEC_NAME, LEC_ST_DATE, LEC_END_DATE, GRADE, SUB_NAME, ST_PER, END_PER, LEC_ST_NAME) AS LEC_DAY
FROM T;

INSERT INTO ON_LEC(ON_LEC_ID, ON_LEC_TITLE, ON_LEC_CONTENT, PLAY_TIME, LEC_OPEN_ID, WRIER_ID, WRI_DATE, UPDER_ID, UPD_DATE)
VALUES('ON1', '[고등예비과정 수학1] 01강 다항식의 연산(1)', '오늘 강의 영상은 다항식입니다', 40, 1, 'admin01', SYSDATE, 'admin01', SYSDATE)


SELECT ON_LEC_ID, ON_LEC_TITLE, ON_LEC_CONTENT, ON_LEC_ATFILE_ID, PLAY_TIME, LEC_OPEN_ID, WRIER_ID, WRI_DATE, UPDER_ID, UPD_DATE
FROM ON_LEC
WHERE LEC_OPEN_ID =1;

SELECT TO_CHAR(TEST_ST_DATE,'YYYYMMDD'), TO_CHAR(TEST_END_DATE,'YYYYMMDD')  
FROM TEST 
WHERE NOT OPEN_CODE IN ('E101');

SELECT LEC_DATE, LEC_OPEN_ID, STU_ID, ATTEND_STATE_CODE, ATTEND_DESC
FROM LEC_ATTEND
WHERE STU_ID ='stu01'
AND LEC_OPEN_ID =1;

SELECT LEC_ST_DATE, LEC_END_DATE
FROM LEC_OPEN
WHERE LEC_OPEN_ID =1

--출석 조회
SELECT LEC_DATE, LEC_OPEN_ID, STU_ID, ATTEND_STATE_CODE, ATTEND_DESC, TO_CHAR(LEC_DATE,'YYYYMM') YEAR_MONTH
        ,(SELECT TO_CHAR(LEC_ST_DATE,'YYYYMM') FROM LEC_OPEN WHERE LEC_OPEN_ID =1) LEC_ST_DATE
        ,(SELECT TO_CHAR(LEC_END_DATE,'YYYYMM') FROM LEC_OPEN WHERE LEC_OPEN_ID =1) LEC_END_DATE
FROM LEC_ATTEND
WHERE STU_ID = 'stu01'
AND LEC_OPEN_ID = 1
AND LEC_DATE BETWEEN (SELECT LEC_ST_DATE FROM LEC_OPEN WHERE LEC_OPEN_ID =1) 
                AND (SELECT LEC_END_DATE FROM LEC_OPEN WHERE LEC_OPEN_ID =1)
AND TO_CHAR(LEC_DATE,'YYYYMM') = '202110'

SELECT TO_CHAR(LEC_ST_DATE,'YYYY MM DD') LEC_ST_DATE, TO_CHAR(LEC_END_DATE,'YYYY MM DD') LEC_END_DATE
		FROM LEC_OPEN
		WHERE LEC_OPEN_ID = 1
--수강생 출결 카운트
SELECT SUM(DECODE(ATTEND_STATE_CODE, 'A101', 1, 0))  attendCnt
       , SUM(DECODE(ATTEND_STATE_CODE, 'A102', 1, 0)) absentCnt
       , SUM(DECODE(ATTEND_STATE_CODE, 'A103', 1, 0)) lateCnt
       , SUM(DECODE(ATTEND_STATE_CODE, 'A104', 1, 0)) earlyCnt
FROM LEC_ATTEND
WHERE LEC_OPEN_ID = 2
AND STU_ID = 'stu01'
AND LEC_DATE BETWEEN (SELECT LEC_ST_DATE FROM LEC_OPEN WHERE LEC_OPEN_ID =2) 
                AND (SELECT LEC_END_DATE FROM LEC_OPEN WHERE LEC_OPEN_ID =2)

SELECT A.QUEST_ID, A.QUEST_CONTENT, A.QUEST_ANSWER, A.QUEST_POINT, A.QUEST_TYPE, A.QUEST_LEVEL
             , A.QUEST_COMMENT, A.EX1, A.EX2, A.EX3, A.EX4, A.EX5, A.TEST_ID, A.QUEST_ATFILE_ID, B.ATFILE_PATH, B.ATFILE_ORINAME
		FROM TEST_QUEST A LEFT OUTER JOIN ATFILE B
		ON A.QUEST_ATFILE_ID = B.ATFILE_ID
	    WHERE A.TEST_ID =45
		AND A.QUEST_ID = 1
        
        
        
        SELECT CODE_GR_ID, CODE_ID, CODE_USE, CODE_NAME, CODE_DESC
		FROM CODE_TB
		WHERE CODE_GR_ID = 'S1'
        
        SELECT NVL(MAX(CNS_ID),0)+1 FROM COUNSEL
        
        
        INSERT INTO COUNSEL(STU_NAME, STU_PHN, STU_EMAIL, POST, ADDR, ADDR_DETAIL, PROTEC_NAME, PROTEC_PHN, SCH_NAME 
                            , BOOK_DATE, CNS_ID, CNS_STAT_CODE, HOPE_SUB1, HOPE_SUB2, HOPE_SUB3, GENDER, GRADE, REMARK, HOPE_CNS_DATE)
        VALUES('홍길동', '01012345678', 'resdf@asdf.com', '34445', '한밭대로2022', '신동아 아파트402호', '홍길순', '01012345678'
                , '대전 둔원고등학교', SYSDATE , (SELECT NVL(MAX(CNS_ID),0)+1 FROM COUNSEL), 'C101', 'S101', 'S102', '', 'female', 1, '집중력이 약해요', '2021-09-27'
        )


SELECT T.*
FROM
    (SELECT ROW_NUMBER () OVER(ORDER BY TO_NUMBER(CNS_ID) DESC) RNUM
            , STU_NAME, STU_PHN, STU_EMAIL, POST, ADDR, ADDR_DETAIL, PROTEC_NAME, PROTEC_PHN, SCH_NAME, CNS_CONTENT, CNS_DATE, CNS_TITLE, BOOK_DATE, CNS_ID
            , CNSER_ID, CNS_STAT_CODE, HOPE_SUB1, GENDER, GRADE, REMARK, HOPE_CNS_DATE, HOPE_SUB2, HOPE_SUB3
    FROM COUNSEL 
    WHERE 1=1 
    ORDER BY BOOK_DATE
    ) T
WHERE T.RNUM BETWEEN (#{currentPage}-1) * #{rowSize} + 1 AND #{currentPage} * #{rowSize}   

SELECT COUNT(CNS_ID) CNT
		FROM COUNSEL
        
        COMMIT;